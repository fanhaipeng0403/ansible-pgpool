- block:
    - name: Install pgpool repo online
      yum:
        name: "https://www.pgpool.net/yum/rpms/4.4/redhat/rhel-7-x86_64/pgpool-II-release-4.4-1.noarch.rpm"
        disable_gpg_check: yes
        state: present


    - name: Install pgpool-II-pg13-extensions
      yum:
        name: pgpool-II-pg13-extensions
        disable_gpg_check: yes
        state: present

  tags:
    - pgpool_online
    - pgpool_install


- block:
    - name: Create pgpool log directory
      file:
        path: /var/log/pgpool-II
        state: directory
        owner: postgres
        group: postgres
        mode: 0700

- block:
    - name: install pgpool_recovery on pgsqlPrimary
      shell: 'psql template1 -c "CREATE EXTENSION pgpool_recovery";true'
      become: true
      become_user: postgres
      when: inventory_hostname == groups['pgsqlPrimary'][0]
      tags: recovery

- block:
    - name: Copy failover.sh
      copy:
        src: failover.sh
        dest: /etc/pgpool-II/failover.sh
        owner: postgres
        group: postgres
        mode: 0755

    - name: Copy follow_master.sh
      copy:
        src: follow_master.sh
        dest: /etc/pgpool-II/follow_master.sh
        owner: postgres
        group: postgres
        mode: 0755
  tags: scripts

- block:
    - name: Copy recovery_1st_stage
      copy:
        src: recovery_1st_stage
        dest: '{{ pgdata }}/recovery_1st_stage'
        owner: postgres
        group: postgres
        mode: 0755

    - name: pgpool_remote_start
      copy:
        src: pgpool_remote_start
        dest: '{{ pgdata }}/pgpool_remote_start'
        owner: postgres
        group: postgres
        mode: 0755
  when: inventory_hostname == groups['pgsqlPrimary'][0]
  tags: scripts

- block:

    - name: Copy template pgpool.conf
      template:
        src: pgpool.conf.j2
        dest: /etc/pgpool-II/pgpool.conf
        owner: postgres
        group: postgres
        mode: 0600

    - name: Create .pgpoolkey file with pool_decryption_key variable
      copy:
        content: "{{ pool_decryption_key }}"
        dest: "~/.pgpoolkey"
        mode: "0600"

    - name: Generate pool_passwd for pgpool
      shell: pg_enc -m -k ~/.pgpoolkey -u pgpool "{{ db_pgpool_password }}"
      become: true
      become_user: root

    - name: Generate pool_passwd for postgres
      shell: pg_enc -m -k ~/.pgpoolkey -u postgres "{{ db_postgres_password }}"
      become: true
      become_user: root

    - name: Copy pgpool_node_id
      template:
        src: pgpool_node_id.j2
        dest: /etc/pgpool-II/pgpool_node_id
        owner: postgres
        group: postgres
        mode: 0600

    - name: Copy template pool_hba.conf.j2
      template:
        src: pool_hba.conf.j2
        dest: /etc/pgpool-II/pool_hba.conf
        owner: postgres
        group: postgres
        mode: 0600


    - name: Generate pcp md5 password
      shell: "pg_md5 {{ pgpool_pcp_password }}"
      register: pcp_md5

    - name: Ensure pcp.conf exists
      shell: test -f /etc/pgpool-II/pcp.conf || cp /etc/pgpool-II/pcp.conf.sample /etc/pgpool-II/pcp.conf
      args:
        creates: /etc/pgpool-II/pcp.conf

    - name: Write pcp md5 password in /etc/pgpool-II/pcp.conf
      lineinfile:
        regexp: 'pgpool:{{ pcp_md5.stdout }}'
        path: /etc/pgpool-II/pcp.conf
        line: 'pgpool:{{ pcp_md5.stdout }}'
        owner: postgres
        group: postgres
        mode: 0600
        state: present

    - name: Write pcp md5 password for postgres
      lineinfile:
        path: ~/.pcppass
        regexp: '^localhost:{{ pcp_port  }}:pgpool'
        line: 'localhost:{{ pcp_port }}:pgpool:{{ pgpool_pcp_password }}'
        owner: postgres
        group: postgres
        mode: 0600
        create: true
        state: present
      become: true
      become_user: postgres

  tags: pgpoolConf